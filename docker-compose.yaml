version: "3.8"

services:
  qdrant:
    image: qdrant/qdrant:v1.11.4-arm64
    volumes:
      - qdrant_data:/qdrant/storage
    ports:
      - "6333:6333"
      - "6334:6334"
    networks:
      - app-network

  postgres:
    image: postgres:13.22-trixie
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: app
    volumes:
      - postgres:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d app"]
      interval: 30s
      timeout: 10s
      retries: 5

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=http://0.0.0.0:11434
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  imdb-movie-rag:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /imdb-movie-rag
    ports:
      - "8000:8000"
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
    depends_on:
      - qdrant
      - postgres
      - ollama
    environment:
      - QDRANT_URL=http://qdrant:6333
      - OLLAMA_API=http://ollama:11434
      - POSTGRES_HOST=postgres
    networks:
      - app-network

volumes:
  qdrant_data:
  postgres:
  ollama_data:

networks:
  app-network:
    driver: bridge
